"use strict";(self.webpackChunk_manydesigns_portofino=self.webpackChunk_manydesigns_portofino||[]).push([[546],{5756:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-1a68679c",path:"/actions/crud-action/search.html",title:"Lista delle entità",lang:"it-IT",frontmatter:{},excerpt:"",headers:[{level:2,title:"Paginazione",slug:"paginazione",children:[]},{level:2,title:"Ordinamento",slug:"ordinamento",children:[]},{level:2,title:"Filtro",slug:"filtro",children:[]}],filePathRelative:"actions/crud-action/search.md",git:{updatedTime:1639735989e3,contributors:[{name:"Mattia Dapino",email:"mattia.dapino@hey.com",commits:1}]}}},6449:(n,a,s)=>{s.r(a),s.d(a,{default:()=>o});const e=(0,s(6252).uE)('<h1 id="lista-delle-entita" tabindex="-1"><a class="header-anchor" href="#lista-delle-entita" aria-hidden="true">#</a> Lista delle entità</h1><p>Il metodo per ottenere l&#39;elenco delle entità è paginato di default e se non vengono specificate opzioni di default ritorna la prima pagina.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getKittens</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> kittenAction <span class="token operator">=</span> <span class="token keyword">await</span> Portofino<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token string">&#39;kitten&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token keyword">await</span> kittenAction<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="paginazione" tabindex="-1"><a class="header-anchor" href="#paginazione" aria-hidden="true">#</a> Paginazione</h2><p>È possibile sfruttare la paginazione di Portofino grazie a tre parametri che possiamo passare nell’oggetto di configurazione della chiamata search.</p><ul><li><code>pagination</code> (boolean) il valore di default è true, se impostato a false non passa il parametro maxResult a Portofino, di conseguenza disabilita la paginazione</li><li><code>page</code> (number) il valore di default è 0, serve per indicare la pagina che vogliamo ottenere</li><li><code>pageSize</code> (number) il valore di default è 10, indica il numero di elementi ritornati per ogni pagina</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getKittens</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> kittenAction <span class="token operator">=</span> <span class="token keyword">await</span> Portofino<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token string">&#39;kitten&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token keyword">await</span> kittenAction<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    page<span class="token operator">:</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span>\n    pageSize<span class="token operator">:</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Per disattivare la paginazione assicurati che nel <code>configuration.xml</code> non sia presente l&#39;opzione <code>rowsPerPage</code></p></div><h2 id="ordinamento" tabindex="-1"><a class="header-anchor" href="#ordinamento" aria-hidden="true">#</a> Ordinamento</h2><p>Il parametro <code>sort</code> ci consente di impostare il parametro e la direzione di ordinamento delle entità ritornate dalla search, il parametro deve contenere un oggetto con due attributi:</p><ul><li><strong>property</strong>: Una stringa rappresentante il nome della proprietà che vogliamo ordinare.</li><li><strong>direction</strong>: Una stringa che può assumere i valori <code>asc</code> per ordinare in maniera ascendente e <code>desc</code> per ordinare in maniera discendente.</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getKittens</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> kittenAction <span class="token operator">=</span> <span class="token keyword">await</span> Portofino<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span>‘kitten’<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token keyword">await</span> kittenAction<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      sort<span class="token operator">:</span> <span class="token punctuation">{</span>\n        property<span class="token operator">:</span> ‘name’<span class="token punctuation">,</span>\n        direction<span class="token operator">:</span> ‘asc’<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="filtro" tabindex="-1"><a class="header-anchor" href="#filtro" aria-hidden="true">#</a> Filtro</h2><p>Infine possiamo filtrare il nostro elenco di entità grazie al parametro <code>filters</code>. Questo parametro si aspetta una mappa dove la chiave è il nome del parametro che vogliamo filtrare e il valore può essere una stringa, se vogliamo trovare i valori uguali a quello inserito oppure un oggetto se vogliamo dei filtri più avanzati.</p><p>Al momento i filtri avanzati che possiamo utilizzare sono:</p><ul><li><p><strong>su un elenco di valori</strong>: Se passiamo una lista, se il valore della proprietà della nostra entità è inclusa nella lista, allora viene accettata.</p></li><li><p><strong>range di valori</strong>: se passiamo un oggetto con attributi <code>min</code> e <code>max</code> allora verranno restituite solo le entità il cui attributo rientra in quell’intervallo di valori.</p></li></ul><p>Altre tipologie di filtri più avanzate verranno aggiunte nei prossimi rilasci.</p>',17),t={},o=(0,s(3744).Z)(t,[["render",function(n,a){return e}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);