import{o as n,c as a,a as t}from"./app.24d824db.js";const s='{"title":"Actions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Ottenere una action","slug":"ottenere-una-action"},{"level":2,"title":"Operazioni su una Action","slug":"operazioni-su-una-action"}],"relativePath":"actions/index.md","lastUpdated":1615210511435}',o={},e=t('<h1 id="actions"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h1><p>Esistono 3 tipi di action:</p><ul><li><strong>Action</strong>: rappresenta una action generica, rappresenta una <code>CustomAction</code></li><li><strong>CrudAction</strong>: estende Action</li><li><strong>LoginAction</strong>: questa action viene istanziata esclusivamente in <code>Portofino.auth</code></li></ul><h2 id="ottenere-una-action"><a class="header-anchor" href="#ottenere-una-action" aria-hidden="true">#</a> Ottenere una action</h2><div class="language-js"><pre><code>Portofino<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token string">&#39;my-action&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">action</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>Il payload della promise ritornata da getAction potrebbe essere di tipo <code>Action</code> o <code>CrudAction</code> in base al tipo della action sul backend.</p><h2 id="operazioni-su-una-action"><a class="header-anchor" href="#operazioni-su-una-action" aria-hidden="true">#</a> Operazioni su una Action</h2><p>Data una action è possibile richiamare il metodo <code>getAction</code> sulla action stessa per ottenere una action annidata.</p><p>Possiamo anche accedere all&#39;istanza di axios di quella action tramite l&#39;attributo <code>http</code>. Questo attributo è di tipo <code>NooNoo</code>, un wrapper di axios che espone i metodi <code>get</code>, <code>post</code>, <code>put</code> e <code>delete</code> con gli stessi parametri del nostro amato client HTTP.</p><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">callCustomMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> action <span class="token operator">=</span> <span class="token keyword">await</span> Portofino<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token string">&#39;my-action&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">/* GET /api/my-action/thats-a-custom-method */</span>\n  <span class="token keyword">return</span> action<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;thats-a-custom-method&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',10);o.render=function(t,s,o,c,i,p){return n(),a("div",null,[e])};export default o;export{s as __pageData};
