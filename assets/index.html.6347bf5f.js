import{c as n}from"./app.48a1f12a.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const s={},t=n(`<h1 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h1><p>Esistono 3 tipi di action:</p><ul><li><strong>Action</strong>: rappresenta una action generica, rappresenta una <code>CustomAction</code></li><li><strong>CrudAction</strong>: estende Action</li><li><strong>LoginAction</strong>: questa action viene istanziata esclusivamente in <code>Portofino.auth</code></li></ul><h2 id="ottenere-una-action" tabindex="-1"><a class="header-anchor" href="#ottenere-una-action" aria-hidden="true">#</a> Ottenere una action</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>Portofino<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token string">&#39;my-action&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Il payload della promise ritornata da getAction potrebbe essere di tipo <code>Action</code> o <code>CrudAction</code> in base al tipo della action sul backend.</p><h2 id="operazioni-su-una-action" tabindex="-1"><a class="header-anchor" href="#operazioni-su-una-action" aria-hidden="true">#</a> Operazioni su una Action</h2><p>Data una action \xE8 possibile richiamare il metodo <code>getAction</code> sulla action stessa per ottenere una action annidata.</p><p>Possiamo anche accedere all&#39;istanza di axios di quella action tramite l&#39;attributo <code>http</code>. Questo attributo \xE8 di tipo <code>NooNoo</code>, un wrapper di axios che espone i metodi <code>get</code>, <code>post</code>, <code>put</code> e <code>delete</code> con gli stessi parametri del nostro amato client HTTP.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">callCustomMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> action <span class="token operator">=</span> <span class="token keyword">await</span> Portofino<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token string">&#39;my-action&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* GET /api/my-action/thats-a-custom-method */</span>
  <span class="token keyword">return</span> action<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;thats-a-custom-method&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,10);function e(o,c){return t}var r=a(s,[["render",e]]);export{r as default};
